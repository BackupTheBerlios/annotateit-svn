Copyright 2003 Buzzmaven Co.

Quickstart:

If you have all the perl modules installed (see README) and perl (I
use 5.8 for our system, but you can probably get by with 5.6), you've
already got most of the stuff set up as it is.

1. Create your database and tables:

Login as root and create your database.

mysql -u root -p 

create database annotateit

grant all privileges on annotateit.* to user@localhost identified by 'password';

flush privileges;

exit;

cd etc

mysql -u root -p annotateit < annie.sql

2. Edit the ScriptAlias, Alias, and Directory lines to point to the
correct path on your server.  If you have unzipped the distribution in
/home/virtual/annotateit, your lines will look like this after you are
through with it:

ScriptAlias /annie/cgi-bin /home/virtual/annotateit
Alias /annie /home/virtual/annotateit/html
 
<Directory /home/virtual/annotateit/cgi-bin>
  Options +ExecCGI
  AllowOverride FileInfo
</Directory>

AllowOverride FileInfo is not necessary, but it aids the project in
debugging certain issues.  The error.cgi script can (should) be
modified to point to an email address that you have access to and
read.

You may also need to add:

AddHandler cgi-script .cgi

To the httpd.conf file to get cgi scripts to be treated as such.


3. Restart your server, checking the error log for problems.

4. Edit the etc/annie.conf file

scriptdirectory is actually the url that points to the directory where
the scripts are located.  It should be identical to the ScriptAlias
directive in your httpd.conf file, above.

url is the name of the virtual host (or host) that will be serving
annotateit.

imagesdirectory is the absolute path from the document root of the
host serving annotateit where the images currently reside.

documentdirectory is the directory where the documents saved by your
users will reside when the documents are uploaded.  This path should
be beneath the document root.

documenturl is the absolutepath from the document root of the host
serving annotateit where the documents will be.

user is the username of the mysql user that you want to access the system.

password is the password that the mysql user will use when accessing
the database.

name is the name of the database to use

host is the name of the host that the database you are using resides.
Unless you have a separate webserver and database server, leave host
as "localhost"

email is who mail from the system will appear to be from.  You could
put your own email address in that field.

4. In the cgi-bin directory check that the first line of every script
points to your perl interpreter.  As it comes in the distribution, the
first line will be #!/usr/local/bin/perl. You can find the actual
directory of your perl interpreter by issuing

$ which perl

Usually, it is in the /usr/bin directory or the /usr/local/bin
directory.  But some administrators put it in very strange places.

If perl is not in the /usr/local/bin directory issue this command in the cgi-bin directory:

$ perl -pi -e 's|#!/usr/local/bin/perl|#!/path/to/perl|' *.cgi

where '/path/to/perl' is the actual path to the perl interpreter you
found by issuing the which command, above.  The perl -pi -e command
substitutes the appropriate perl location for the bad one and saving
the file back.

All done.  Let me know how it goes: annotateit-users@buzzmaven.com.

If you want document conversion capabilities (RTF/Word), you need to
get a couple of additional software pieces.  wvWare is one of them:

http://wvware.sourceforge.net/

and GNU UnRTF is another.

http://www.gnu.org/software/unrtf/unrtf.html

We may eventually switch to rtf2html, but haven't tested that yet.